{"version":3,"sources":["services/Redux/actions/index.js","components/search/App.js","services/Axios/index.js","serviceWorker.js","services/Redux/reducers/index.js","services/Redux/reducers/fetchAPI.js","index.js"],"names":["getAirports","data","type","payload","App","_useState","useState","_useState2","Object","slicedToArray","airports","setAirports","_useState3","_useState4","airport","setAirport","_useState5","_useState6","resultAvailable","setResult","_useState7","_useState8","loading","setLoading","_useState9","_useState10","selected","setSelected","results","useSelector","state","fetchAPI","dispatch","useDispatch","useEffect","fetched","fetch","undefined","city","changeTitle","axios","get","then","response","catch","error","document","title","concat","name","searchAirports","debounce","input","length","filter","e","toLowerCase","includes","iata","charAt","react_default","a","createElement","style","outline","border","width","display","placeholder","className","onChange","target","value","trim","handleInput","marginTop","marginBottom","fontSize","color","textAlign","padding","onClick","fontWeight","float","paddingBottom","borderBottom","map","item","i","key","id","selectAirport","Boolean","window","location","hostname","match","allReducers","combineReducers","arguments","action","store","createStore","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","search_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68428bdc.chunk.js","sourcesContent":["export function getAirports(data) {\r\n  return {\r\n    type: \"FETCH_AIRPORTS\",\r\n    payload: data\r\n  };\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { debounce } from 'throttle-debounce';\n\nimport * as API from '../../services/Axios';\nimport './App.css';\n\nfunction App() {\n  const [airports, setAirports] = useState([]);\n  const [airport, setAirport] = useState({});\n  const [resultAvailable, setResult] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [selected, setSelected] = useState(false);\n  const results = useSelector(state => state.fetchAPI);\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    if (!results.data) {\n      fetch();\n    } else {\n      fetched();\n    }\n    if (airport.city !== undefined) {\n      changeTitle();\n    }\n  });\n\n  let fetch = () => {\n    dispatch(API.aiportSearch());\n  }\n  let fetched = () => {\n    setLoading(false);\n  }\n  let changeTitle = () => {\n    document.title = `Searched Airport - ${airport.name}`;\n  }\n  let searchAirports = debounce(500, (input) => {\n    let data = results.data;\n    if (input.length > 1) {\n      setAirports(data.filter(e => e.airport.toLowerCase().includes(input.toLowerCase()) || e.city.toLowerCase().includes(input.toLowerCase()) || e.iata.toLowerCase().includes(input.toLowerCase())));\n      setResult(true);\n    } else if (input.length === 1) {\n      setAirports(data.filter(e => e.airport.charAt(0).toLowerCase() === input.toLowerCase() || e.city.charAt(0).toLowerCase() === input.toLowerCase() || e.iata.charAt(0).toLowerCase() === input.toLowerCase()));\n      setResult(true);\n    } else if (input.length === 0) {\n      setAirports([]);\n      setResult(false);\n      setSelected(false);\n    }\n  });\n  let handleInput = (e) => {\n    let input = e.target.value.trim().toLowerCase();\n    searchAirports(input);\n  }\n  let selectAirport = (item) => {\n    setSelected(true);\n    setResult(false);\n    setAirport({\n      airport: item.airport,\n      city: item.city,\n      iata: item.iata\n    });\n  }\n\n  return (\n    <div style={{ outline: 'none', border: 0 }}>\n      {loading === false &&\n        <div style={{ outline: 'none', border: 0 }}>\n          <div style={{ width: '100%', display: 'block' }}>\n            <input\n              type=\"text\"\n              placeholder=\"Enter Airport Name, Code or City Name\"\n              className=\"Search\"\n              // value={keyword}\n              onChange={e => handleInput(e)} />\n          </div>\n          <div className=\"Gap\"></div>\n\n          <h5 style={{ marginTop: 10, marginBottom: 10, fontSize: 15, color: '#f0ad4e', textAlign: 'center' }}>\n            {resultAvailable === true && \"Search Results\"}\n            {selected === true && \"Selected Airport\"}\n          </h5>\n          {selected === true &&\n            <div className=\"Results\">\n              <div style={{ marginTop: 0, padding: 10 }} onClick={() => setSelected(true)}>\n                <div style={{ width: '100%', display: 'block' }}>\n                  <span style={{ fontWeight: 'bold' }}>{airport.city}</span>\n                  <span style={{ float: 'right' }}>{airport.iata}</span>\n                </div>\n                <p style={{ marginTop: 5, marginBottom: 0, paddingBottom: 5, color: '#777', borderBottom: '0.5px solid #9997' }}>{airport.airport}</p>\n              </div>\n            </div>\n          }\n          {selected === false && resultAvailable === true && airports.map((item, i) => (\n            <div className=\"Results\" key={i}>\n              <div style={{ marginTop: 0, padding: 10 }} id=\"Select\" onClick={() => selectAirport(item)}>\n                <div style={{ width: '100%', display: 'block' }}>\n                  <span style={{ fontWeight: 'bold' }}>{item.city}</span>\n                  <span style={{ float: 'right' }}>{item.iata}</span>\n                </div>\n                <p style={{ marginTop: 5, marginBottom: 0, paddingBottom: 5, color: '#777', borderBottom: '0.5px solid #9997' }}>{item.airport}</p>\n              </div>\n            </div>\n          ))\n          }\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { getAirports } from '../Redux/actions';\r\nimport axios from 'axios';\r\n\r\nfunction aiportSearch() {\r\n    return (dispatch) => {\r\n      axios.get('https://res.cloudinary.com/dfxnlms6d/raw/upload/v1564822945/airport_tcsji6.json')\r\n        .then(response => {\r\n          dispatch(getAirports(response.data))\r\n        })\r\n        .catch(error => {\r\n            let data = []\r\n            dispatch(getAirports(data))\r\n        });\r\n    };\r\n}\r\n\r\nexport { aiportSearch }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport fetchAPI from '../reducers/fetchAPI';\r\n\r\n\r\nconst allReducers = combineReducers({\r\n  fetchAPI\r\n});\r\nexport default allReducers;","export default function (state = [], action) {\r\n  switch (action.type) {\r\n    case \"FETCH_AIRPORTS\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/search/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport allReducers from '../src/services/Redux/reducers/index';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n    allReducers,\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}