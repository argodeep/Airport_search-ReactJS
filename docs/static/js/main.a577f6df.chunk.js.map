{"version":3,"sources":["services/Redux/reducers/index.js","services/Redux/reducers/fetchAPI.js","components/search/App.js","services/Axios/index.js","services/Redux/actions/index.js","serviceWorker.js","index.js"],"names":["allReducers","combineReducers","fetchAPI","state","action","type","payload","App","useState","airports","setAirports","airport","setAirport","resultAvailable","setResult","loading","setLoading","selected","setSelected","results","useSelector","dispatch","useDispatch","useEffect","data","length","fetched","fetch","undefined","city","changeTitle","axios","get","window","location","origin","pathname","split","then","response","catch","error","document","title","searchAirports","debounce","input","filter","e","toLowerCase","includes","iata","charAt","style","outline","border","width","display","placeholder","className","onChange","target","value","trim","handleInput","marginTop","marginBottom","fontSize","color","textAlign","padding","onClick","fontWeight","float","paddingBottom","borderBottom","map","item","i","key","id","selectAirport","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","ReactDOM","render","StrictMode","getElementById","URL","process","href","addEventListener","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a577f6df.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport fetchAPI from '../reducers/fetchAPI';\r\n\r\n\r\nconst allReducers = combineReducers({\r\n  fetchAPI\r\n});\r\nexport default allReducers;","export default function (state = [], action) {\r\n  switch (action.type) {\r\n    case \"FETCH_AIRPORTS\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { debounce } from 'throttle-debounce';\r\n\r\nimport * as API from '../../services/Axios';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [airports, setAirports] = useState([]);\r\n  const [airport, setAirport] = useState({});\r\n  const [resultAvailable, setResult] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selected, setSelected] = useState(false);\r\n  const results = useSelector(state => state.fetchAPI);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    if (!results.data) {\r\n      fetch();\r\n    } else {\r\n      if (results.data.length > 0) {\r\n        fetched();\r\n      }\r\n    }\r\n    if (airport.city !== undefined) {\r\n      changeTitle();\r\n    }\r\n  });\r\n\r\n  let fetch = () => {\r\n    dispatch(API.aiportSearch());\r\n  }\r\n  let fetched = () => {\r\n    setLoading(false);\r\n  }\r\n  let changeTitle = () => {\r\n    document.title = `Searched Airport - ${airport.airport}`;\r\n  }\r\n  let searchAirports = debounce(500, (input) => {\r\n    setSelected(false);\r\n    let data = [...results.data];\r\n    if (input.length > 1) {\r\n      setAirports(data.filter(e => e.airport.toLowerCase().includes(input.toLowerCase()) || e.city.toLowerCase().includes(input.toLowerCase()) || e.iata.toLowerCase().includes(input.toLowerCase())));\r\n      setResult(true);\r\n    } else if (input.length === 1) {\r\n      setAirports(data.filter(e => e.airport.charAt(0).toLowerCase() === input.toLowerCase() || e.city.charAt(0).toLowerCase() === input.toLowerCase() || e.iata.charAt(0).toLowerCase() === input.toLowerCase()));\r\n      setResult(true);\r\n    } else if (input.length === 0) {\r\n      setAirports([]);\r\n      setResult(false);\r\n      setSelected(false);\r\n    }\r\n  });\r\n  let handleInput = (e) => {\r\n    let input = e.target.value.trim().toLowerCase();\r\n    searchAirports(input);\r\n  }\r\n  let selectAirport = (item) => {\r\n    setSelected(true);\r\n    setResult(false);\r\n    setAirport({\r\n      airport: item.airport,\r\n      city: item.city,\r\n      iata: item.iata\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div style={{ outline: 'none', border: 0 }}>\r\n      {loading === false &&\r\n        <div style={{ outline: 'none', border: 0 }}>\r\n          <div style={{ width: '100%', display: 'block' }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Airport Name, Code or City Name\"\r\n              className=\"Search\"\r\n              // value={keyword}\r\n              onChange={e => handleInput(e)} />\r\n          </div>\r\n          <div className=\"Gap\"></div>\r\n\r\n          <h5 style={{ marginTop: 10, marginBottom: 10, fontSize: 15, color: '#f0ad4e', textAlign: 'center' }}>\r\n            {resultAvailable === true && \"Search Results\"}\r\n            {selected === true && \"Selected Airport\"}\r\n          </h5>\r\n          {selected === true &&\r\n            <div className=\"Results\">\r\n              <div style={{ marginTop: 0, padding: 10 }} onClick={() => setSelected(true)}>\r\n                <div style={{ width: '100%', display: 'block' }}>\r\n                  <span style={{ fontWeight: 'bold' }}>{airport.city}</span>\r\n                  <span style={{ float: 'right' }}>{airport.iata}</span>\r\n                </div>\r\n                <p style={{ marginTop: 5, marginBottom: 0, paddingBottom: 5, color: '#777', borderBottom: '0.5px solid #9997' }}>{airport.airport}</p>\r\n              </div>\r\n            </div>\r\n          }\r\n          {selected === false && resultAvailable === true && airports.map((item, i) => (\r\n            <div className=\"Results\" key={i}>\r\n              <div style={{ marginTop: 0, padding: 10 }} id=\"Select\" onClick={() => selectAirport(item)}>\r\n                <div style={{ width: '100%', display: 'block' }}>\r\n                  <span style={{ fontWeight: 'bold' }}>{item.city}</span>\r\n                  <span style={{ float: 'right' }}>{item.iata}</span>\r\n                </div>\r\n                <p style={{ marginTop: 5, marginBottom: 0, paddingBottom: 5, color: '#777', borderBottom: '0.5px solid #9997' }}>{item.airport}</p>\r\n              </div>\r\n            </div>\r\n          ))\r\n          }\r\n          {\r\n            selected === false && resultAvailable === true && airports.length === 0 &&\r\n            <p style={{ textAlign: 'center' }}>No Result Found</p>\r\n          }\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { getAirports } from '../Redux/actions';\r\nimport axios from 'axios';\r\n\r\nfunction aiportSearch() {\r\n  return (dispatch) => {\r\n    axios.get(window.location.origin + '/' + window.location.pathname.split('/')[1] + '/airport.json')\r\n      .then(response => {\r\n        dispatch(getAirports(response.data))\r\n      })\r\n      .catch(error => {\r\n        throw (error);\r\n      });\r\n  };\r\n}\r\n\r\nexport { aiportSearch }","export function getAirports(data) {\r\n  return {\r\n    type: \"FETCH_AIRPORTS\",\r\n    payload: data\r\n  };\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport allReducers from '../src/services/Redux/reducers/index';\nimport './index.css';\nimport App from './components/search/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = (window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\nconst enhancer = composeEnhancers(\n  applyMiddleware(thunk),\n  // other store enhancers if any\n);\nconst store = createStore(allReducers, enhancer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}